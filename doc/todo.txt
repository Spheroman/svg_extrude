Clean up method order in classes
Use Iterable in type hints instead of List
More unit tests

Checks:
  * Code TODOs
  * Inspections
  * Run all unit tests

Future work:
  * Single 3MF file with multiple objects
  * Output JSON
    This allows further processing by other tools without parsing the SCAD file.
  * Operate without OpenSCAD
      * CSG difference
      * Triangulation
      * Output file (STL, 3MF, potentially others) generation
  * Read SVG <desc> and/or <title> and write them as comments to the OpenSCAD
    file. Also the original SVG element ID.
  * Additional geometry on top of everything (configurable height), with
    optional color selection (default: color of the back-most shape)
    Use union of all shapes or a separate shape (or a layer?)
  * Status message: groups, each with number of shapes and number of points
    OTOH, that's not really relevant because in does not consider clipping.
  * When using OpenSCAD for rendering, use OpenSCAD customizer to select groups
    instead of writing different SCAD files? This would allow rendering from the
    same file as written with --scad.
  * In ScadFile, define colors like `red = "#ff0000";`
  * Allow specifying the orgin, e. g. "bottom left" so it looks like in
    inkscape.
  * Do not subtract disjoint paths to reduce the number of difference CSG
    operations.
  * Configurable coordinate origin?
  * Configurable flipping: x (default), y, none, both
  * Reading available colors from JSON file (name and color, which can be a
    named color (defining an alias))
  * Reading available colors from environment variable
  * Option: file and group names use numeric colors, even if a name is defined
  * Consider using OpenSCAD primitives: cube, circle, text
  * Layer for ignored elements (for comments)? Layer classes?
  * Merging groups?
  * Create Scad.Identifier which also checks validity
  * Rounding of coordinates, because Inkscape values are often off by epsilon
  * Better handling of 3rdparty/cjlano_svg? Import explicitly (requires renaming
    3rdparty)? Move up? Use package that is in PyPI?
  * Proper error handling if the fill style is not a simple color
  * We might be able to do outlines by minkowski-ing with a circle
  * Allow configuring the OpenSCAD executable: PATH, environment variable,
    command line
  * Show a list of color replacements with maximum ΔE (JND ≈ 2.3)
